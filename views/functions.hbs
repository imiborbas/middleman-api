<!DOCTYPE html>
<html>
<head>
  {{> head}}
</head>
  <body>
    <div class="nav-bar">
      <img class="logo" src="https://kelp.nyc3.digitaloceanspaces.com/logo.svg"><span class="hidden-xs"><h3>Ca$hew</h3></span>
      <ul>
        <li id="nav-bar__wallets"><a href="#"><i class="material-icons">account_balance_wallet</i><span class="hidden-xs navbar-text"> Wallets</span></a></li>
        <li id="nav-bar__functions"><a href="#"><i class="material-icons">attach_money</i><span class="hidden-xs navbar-text"> Functions</span></a></li>
        <li id="nav-bar__docs"><a href="#"><i class="material-icons">description</i><span class="hidden-xs navbar-text"> Docs</span></a></li>
        <li id="nav-bar__account"><a href="#"><i class="material-icons">account_box</i><span class="hidden-xs navbar-text"> Account</span></a></li>
        <li id="nav-bar__support"><a href="#"><i class="material-icons">help_outline</i><span class="hidden-xs navbar-text"> Support</span></a></li>
      </ul>
    </div>
  <div class="main">
      <!--  CARDS FOR FUNCTIONS -->
    <div class="container">
      <h1>Wallet Functions</h1>
      <!-- sign message card -->
<div class="card flex-card">
  <div class="card-content">
    <h3>Sign A Message</h3>
    <p>You can use a Kelp wallet to sign messages.</p>
  </div>

  <div class="card-form">
    <form autocomplete="off">
      <div class="form-field">
        <label>Message:</label><br>
        <input name="message" type="text" placeholder="mayor@dani.town" autofocus />
      </div>
      <div class="form-field">
        <label>Choose a Wallet: </label><br>
          <div class="dropdown">
          <select id="wallet-dropdown" onchange="">
            <option value="walle1">Wallet 1</option>
            <option value="wallet2">Wallet 2</option>
            <option value="wallet3">Wallet 3</option>
          </select>
        </div>
      </div>
      <button type="submit">Submit</button>
    </form>
  </div>

  <div class="card-api-instructions">
    <div class="card-api-instructions__code-sample">
      <code>curl -X POST "https://api.kelp.cloud/wallets" -H "X-Auth-Key: AUTHKEY"</code>
    </div>
    <button><i class="material-icons">exit_to_app</i>Docs</button>
  </div>
</div>



<!--  Sign Transaction Card -->
<div class="card flex-card">
  <div class="card-content">
    <h3>Sign A Transaction</h3>
    <p>You can use a Kelp wallet to sign transactions.</p>
  </div>

  <div class="card-form">
    <form autocomplete="off">
      <div class="form-field">
        <label>Transaction:</label><br>
        <input name="to_addr" type="text" placeholder="mayor@dani.town" autofocus />
      </div>
      <div class="form-field">
        <label>Amount of ETH:</label><br>
        <input name="to_addr" type="text" placeholder="1 ETH" autofocus />
      </div>
      <div class="form-field">
        <label>Gas:</label><br>
        <input name="to_addr" type="text" placeholder="100000" autofocus />
      </div>
      <div class="form-field">
        <label>Choose a Wallet: </label><br>
          <div class="dropdown">
          <select id="wallet-dropdown" onchange="">
            <option value="walle1">Wallet 1</option>
            <option value="wallet2">Wallet 2</option>
            <option value="wallet3">Wallet 3</option>
          </select>
        </div>
      </div>
      <button type="submit">Submit</button>
    </form>
  </div>

  <div class="card-api-instructions">
    <div class="card-api-instructions__code-sample">
      <code>curl -X POST "https://api.kelp.cloud/wallets" -H "X-Auth-Key: AUTHKEY"</code>
    </div>
    <button><i class="material-icons">exit_to_app</i>Docs</button>
  </div>
</div>
    </div>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
  <script>

      // auth function that redirects user to login if not authed and otherwise returns dev info
      async function auth() {
        //  if no cookie, redirect to Login
        if (document.cookie === '') { window.location = '/login'; }

        // otherwise get id
        let developerId = await fetch('/developers/me', {
          headers: {
            'x-auth-key': document.cookie
          }
        }).catch((e) => {
          // error authenticating, redirect the user to login
          window.location = '/login';
        })
          return developerId.json()
      }

      //main
      void async function() {
        // make the wallets link active
        jQuery('#nav-bar__functions').addClass('nav-bar-active');

        //first auth the user. devId is at account._id, email is at account.email
        let {account} = await auth();

        // display the user's email in the top corner
        // TODO move from top corner to nav bar
        jQuery('#banner').append(`<p id="my-email"><a href="/account">${account.email}</a></p>`);

        // get all the user's wallets

        let {wallets} = await getWallets(account._id)

        await Promise.all(wallets.map(async wallet => {
          wallet.balance = await getWalletBalance(wallet._id)
        }))

        if (jQuery.isEmptyObject(wallets)) {
          // change the text of the create wallet box
          jQuery('#create-wallet-card-instructions').html('<p id="create-wallet-card-instructions">You haven\'t created any wallets.<br><span class="subtext">It\'s not too late. We will help you get started.</span></p>');
          jQuery('#wallet-create-button').html('+ Create Your First Wallet');

        } else {
          // change the text
          jQuery('#create-wallet-card-instructions').html('<p id="create-wallet-card-instructions">Create another wallet.<br><span class="subtext">Come on. It\'s fun.</span></p>');
          jQuery('#wallet-create-button').html('+ Create A Wallet');

          // create a table
          let table = jQuery('.wallet-table').append('<table id="wallet-table__table"><thead id="wallet-table__table__thead"><tr><th>Created Date</th><th>Address</th><th>Owner</th></th><th>Balance</th></tr></thead><tbody id="wallet-table__table__tbody"></tbody></table>');
          let html = wallets.map(generateTableHTML).join('')
          jQuery('#wallet-table__table__tbody').html(html);
          jQuery('.wallet-table').append('<div class="card-api-instructions"><div class="card-api-instructions__code-sample"><code>curl -X GET "https://api.cashew.cloud/wallets" -H "X-Auth-Key: AUTHKEY"</code></div><button><i class="material-icons">exit_to_app</i>Docs</button></div>');
        }

        // let walletAddresses = document.getElementsByClassName('wallet-address')
        //
        // // if you click on a wallet, we append to the #demo block some signing functions for you to try out
        // jQuery('.wallet-address').on('click', function(e) {
        //   document.getElementById('create-wallet').className = 'border-bottom';
        //   document.getElementsByClassName('wallet-demo')[0].innerHTML = signingHtml;
        //
        //   // fill in the form fields with the wallet address
        //   let currentWalletAddr = e.currentTarget.innerText;
        //   jQuery('[name=wallet-address]').val(currentWalletAddr);
        //
        //   // handle if someone tries to sign a message
        //
        //   jQuery('#signing-demo__form').on('submit', function(e) {
        //     e.preventDefault();
        //
        //     // get message to sign
        //     //don't need to get wallet address because already have it in currentWalletAddr
        //     let messageToSign = jQuery('[name=message]').val();
        //
        //
        //     // go sign it
        //
        //     jQuery.post({
        //       url: `/wallets/address/${currentWalletAddr}/sign_message` ,
        //       type: 'post',
        //       data: {
        //         message: messageToSign
        //       },
        //       headers: {
        //         'x-auth-key': document.cookie
        //       }
        //     }, function(data, status) {
        //       // clear form field
        //       jQuery('[name=message]').val("");
        //
        //       // display success banner with signed message
        //       // TODO pretty print this. i think it should be JSON.parse(JSON.stringify(data)).message.messageHash but like who knows
        //       let signedMessageObj = JSON.parse(JSON.stringify(data)).message;
        //
        //       // let signedMessageHtml = `<table class='pure-table' id='signing-demo__success-table'><thead><tr><th>Field</th><th>Value</th><tr></thead><tbody><tr><td>Message</td><td>${signedMessageObj.message}</td></tr><tr><td>Message Hash</td><td>${signedMessageObj.messageHash}</td></tr><tr><td>Signature</td><td>${signedMessageObj.signature}</td></tr></tbody></table>`;
        //       let signedMessageHtml = `<div id='signing-message-success-message'><h4>ðŸ“œ Message: </h4><span class="preformatted" style="background-color: white;">${signedMessageObj.message}</span><h4>Message Hash:</h4><span class="preformatted" style="background-color: white; overflow-wrap: break-word;">${signedMessageObj.messageHash}</span><h4>Signature: </h4><span class="preformatted" style="background-color: white; overflow-wrap: break-word;">${signedMessageObj.signature}</span><h4>Wallet Used To Sign Message: </h4><span class="preformatted" style="background-color: white; overflow-wrap: break-word;">${currentWalletAddr}</span></div>`;
        //
        //       jQuery('#signing-demo__signed-message').html(signedMessageHtml);
        //     }).fail(function(xhr, status, error) {
        //     // handle fail case
        //     console.log(error);
        //     jQuery('[name=message]').val("");
        //     jQuery('#signing-demo__form').append('<div class="error"> Something went horribly, horribly wrong.</div>');
        //   })
        // })
        //
        //   // handle if someone tries to sign a transaction
        //   // NOTE: created endpoint for signing by wallet addr but i can't test if it works without intrnet
        //   // next part will look something like this:
        //
        //   jQuery('#signing-transaction-demo__form').on('submit', function(e) {
        //     e.preventDefault();
        //
        //     // get message to sign
        //     //don't need to get wallet address because already have it in currentWalletAddr
        //     let transactionToSign = {
        //       to: jQuery('[name=to_addr]').val(),
        //       value: jQuery('[name=value]').val(),
        //       gas: jQuery('[name=gas]').val()
        //     };
        //
        //     // go sign it
        //
        //     jQuery.post({
        //       url: `/wallets/address/${currentWalletAddr}/sign_transaction` ,
        //       type: 'post',
        //       data: {
        //         "transaction": {
        //         		"to": transactionToSign.to,
        //         		"value": transactionToSign.value,
        //         		"gas": transactionToSign.gas
        //         	}
        //       },
        //       headers: {
        //         'x-auth-key': document.cookie
        //       }
        //     }, function(data, status) {
        //       // clear form field
        //       jQuery('[name=to_addr]').val("");
        //       jQuery('[name=value]').val("");
        //       jQuery('[name=gas]').val("");
        //
        //       // display success banner with signed message
        //       let signedTransactionObj = JSON.parse(JSON.stringify(data)).signedTransaction;
        //
        //       let signedTransactionHtml = `<div id='signing-transaction-success-message'><h4>Signed Transaction: </h4><span class="preformatted" style="background-color: white; overflow-wrap: break-word;">${signedTransactionObj.rawTransaction}</span><h4>Wallet Used To Sign Transaction: </h4><span class="preformatted" style="background-color: white; overflow-wrap: break-word;">${currentWalletAddr}</span></div>`;
        //
        //       jQuery('#signing-transaction-demo__success-message').html(signedTransactionHtml);
        //     }).fail(function(xhr, status, error) {
        //     // handle fail case
        //     console.log(error);
        //     jQuery('[name=to_addr]').val("");
        //     jQuery('[name=value]').val("");
        //     jQuery('[name=gas]').val("");
        //     jQuery('#signing-transaction-demo__form').append('<div class="error"> Something went horribly, horribly wrong.</div>');
        //   })
        // })
        // })
      }()

      // get all the wallets that are attached to the logged in developer
      async function getWallets(myDeveloperId) {
        let res = await fetch(`/wallets/developer/${myDeveloperId}`, {
          headers: {
            'x-auth-key': document.cookie
          }
        })

        return res.json()
      }

      // get wallet balance for a wallet
      async function getWalletBalance(walletId) {
        let res = await fetch(`/wallets/${walletId}/balance`, {
          headers: {
            'x-auth-key': document.cookie
          }
        })

        let {balance} = await res.json()

        return balance
      }

      // Helper function to get the wallet created date from its id
      var createdAt = (walletId) => {
        return new Date(parseInt(walletId.substring(0, 8), 16) * 1000).toLocaleDateString('en-UK');
      };

    //   when submit the generate wallet form, generate a wallet for the user id
      jQuery('#wallet-create-button').on('click', function(e) {
        e.preventDefault();

        // send the request to the create wallet api
        jQuery.post({
          url: '/wallets/',
          type: 'post',
          data: {
            "user_id": "demo_user_id"
          },
          headers: {
            'x-auth-key': document.cookie
          }
        }, function(data, status) {

          jQuery('#wallet-creation-message').addClass('success').addClass('message-box').html(`<i class="material-icons">favorite_border</i><p>Success! Created a wallet at the address <span class="wallet-address preformatted">${data.wallet.address}</span></p>`);

          // change the text of the create wallet box
          jQuery('#create-wallet-card-instructions').html('<p id="create-wallet-card-instructions">Create another wallet.<br><span class="subtext">Come on. It\'s fun.</span></p>');
          jQuery('#wallet-create-button').html('+ Create A Wallet');


          // add the new wallet to the list
          // if first wallet, create the whole table
          // otherwise just append the row
          if (jQuery('.wallet-table').html() === '') {
            // this is the first wallet, create the whole table
            let table = jQuery('.wallet-table').append('<table id="wallet-table__table"><thead id="wallet-table__table__thead"><tr><th>Created Date</th><th>Address</th><th>Owner</th></th><th>Balance</th></tr></thead><tbody id="wallet-table__table__tbody"></tbody></table>');
            let html = `<tr><td>${createdAt(data.wallet._id)}</td><td><span class="wallet-address preformatted">${data.wallet.address}</span></td><td>${data.wallet.user_id}</td><td>0 ETH</td></tr>`;
            jQuery('#wallet-table__table__tbody').html(html);
            jQuery('.wallet-table').append('<div class="card-api-instructions"><div class="card-api-instructions__code-sample"><code>curl -X GET "https://api.cashew.cloud/wallets" -H "X-Auth-Key: AUTHKEY"</code></div><button><i class="material-icons">exit_to_app</i>Docs</button></div>');

          } else {
            jQuery('#wallet-table__table__tbody').append(`<tr><td>${createdAt(data.wallet._id)}</td><td><span class="wallet-address preformatted">${data.wallet.address}</span></td><td>${data.wallet.user_id}</td><td>0 ETH</td></tr>`);
          }

        }).fail(function(xhr, status, error) {
        // error handling
          console.log(error);
          jQuery('#wallet-creation-message').addClass('error').addClass.html('<i class="material-icons">error_outline</i><p>Something went horribly, horribly wrong.</p>');
        });
      })

      // // html for wallet functions - these appear when a wallet address is clicked.
      // const signingHtml = "<div id='signing-demo'> <h3>Sign A Message</h3> <div id='signing-demo__container'> <p>Try out the form below to sign a message using your chosen wallet address. Click on a wallet below to use that address to sign the message.</p> <form class='pure-form pure-form-stacked' id='signing-demo__form' autocomplete='off'> <label>Message To Sign:</label> <input name='message' type='text' placeholder='super legit message' /> <label>Wallet To Use (Choose One By Clicking on It Below):</label> <input name='wallet-address' type='text' placeholder='0x8d3...' disabled /> <button class='pure-button' type='submit'>Sign It</button> </form> </div> </div> <div id='signing-demo__signed-message'></div> <div id='signing-transaction-demo'> <h3>Sign A Transaction</h3> <div id='signing-transaction-demo__container'> <p>Try out the form below to sign a transaction using a chosen wallet. To choose a wallet, click on it on the page below. This doesn't actually send eth, it just creates a signed transaction object.</p> <form class='pure-form pure-form-stacked' id='signing-transaction-demo__form' autocomplete='off'> <label>To Address</label> <input name='to_addr' type='text' placeholder='0x8d3e809fbd258083a5ba004a527159da535c8aba' /> <label>Amount of ETH to send:</label> <input name='value' type='text' placeholder='0.01' /> <label>Amount of gas to send:</label> <input name='gas' type='text' placeholder='2000000' /> <label>Wallet To Use (Choose One By Clicking on It Below):</label> <input name='wallet-address' type='text' placeholder='0x8d3...' disabled /> <button class='pure-button' type='submit'>Sign It</button> </form> </div> <div id='signing-transaction-demo__success-message'></div> </div>"

    </script>
  </body>
</html>
