<!DOCTYPE html>
<html>
<head>
  {{> head}}
</head>
  <body>
    <div class="nav-bar">
      <img class="logo" src="https://kelp.nyc3.digitaloceanspaces.com/logo.svg"><span class="hidden-xs"><h3>Ca$hew</h3></span>
      <ul>
        <li id="nav-bar__wallets"><a href="/developers"><i class="material-icons">account_balance_wallet</i><span class="hidden-xs navbar-text"> Wallets</span></a></li>
        <li id="nav-bar__functions"><a href="/functions"><i class="material-icons">attach_money</i><span class="hidden-xs navbar-text"> Functions</span></a></li>
        <li id="nav-bar__docs"><a href="http://docs.kelp.cloud"><i class="material-icons">description</i><span class="hidden-xs navbar-text"> Docs</span></a></li>
        <li id="nav-bar__account"><a href="/account"><i class="material-icons">account_box</i><span class="hidden-xs navbar-text"> Account</span></a></li>
        <li id="nav-bar__support"><a href="mailto:mayor@dani.town"><i class="material-icons">help_outline</i><span class="hidden-xs navbar-text"> Support</span></a></li>
      </ul>
    </div>
  <div class="main">
      <!--  CARDS FOR FUNCTIONS -->
    <div class="container">
      <h1>Wallet Functions</h1>
      <!-- sign message card -->
<div class="card flex-card">
  <div class="card-content">
    <h3>Sign A Message</h3>
    <p>You can use a Kelp wallet to sign messages.</p>
  </div>

  <div class="card-form">
    <form id="sign-message__form" autocomplete="off">
      <div class="form-field">
        <label>Message:</label><br>
        <input name="message" type="text" placeholder="mayor@dani.town" autofocus />
      </div>
      <div class="form-field">
        <label>Choose a Wallet: </label><br>
          <div class="dropdown">
          <select class="wallet-dropdown-select" onchange="">
          </select>
        </div>
      </div>
      <button type="submit">Submit</button>
    </form>
  </div>

  <div class="card-api-instructions">
    <div class="card-api-instructions__code-sample">
      <code>curl -X POST "https://api.middleman.cloud/wallets" -H "X-Auth-Key: AUTHKEY"</code>
    </div>
    <button><i class="material-icons">exit_to_app</i>Docs</button>
  </div>
</div>



<!--  Sign Transaction Card -->
<div class="card flex-card">
  <div class="card-content">
    <h3>Sign A Transaction</h3>
    <p>You can use a Kelp wallet to sign transactions.</p>
  </div>

  <div class="card-form">
    <form id="sign-transaction__form" autocomplete="off">
      <div class="form-field">
        <label>Transaction:</label><br>
        <input name="to_addr" type="text" placeholder="mayor@dani.town" autofocus />
      </div>
      <div class="form-field">
        <label>Amount of ETH:</label><br>
        <input name="value" type="text" placeholder="1 ETH" autofocus />
      </div>
      <div class="form-field">
        <label>Gas:</label><br>
        <input name="gas" type="text" placeholder="100000" autofocus />
      </div>
      <div class="form-field">
        <label>Choose a Wallet: </label><br>
          <div class="dropdown">
          <select class="wallet-dropdown-select" id="wallet-dropdown" onchange="">
          </select>
        </div>
      </div>
      <button type="submit">Submit</button>
    </form>
  </div>

  <div class="card-api-instructions">
    <div class="card-api-instructions__code-sample">
      <code>curl -X POST "https://api.middleman.cloud/wallets" -H "X-Auth-Key: AUTHKEY"</code>
    </div>
    <button><i class="material-icons">exit_to_app</i>Docs</button>
  </div>
</div>
    </div>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
  <script>

      // auth function that redirects user to login if not authed and otherwise returns dev info
      async function auth() {
        //  if no cookie, redirect to Login
        if (document.cookie === '') { window.location = '/login'; }

        // otherwise get id
        let developerId = await fetch('/developers/me', {
          headers: {
            'x-auth-key': document.cookie
          }
        }).catch((e) => {
          // error authenticating, redirect the user to login
          window.location = '/login';
        })
          return developerId.json()
      }

      // helper for generating options for wallets dropdown
      function generateOptionsHTML(wallet) {
        return `<option value=${wallet.address}>${wallet.address}</option>`;
      }

      //main
      void async function() {
        // make the wallets link active
        jQuery('#nav-bar__functions').addClass('nav-bar-active');

        //first auth the user. devId is at account._id, email is at account.email
        let {account} = await auth();

        // display the user's email in the bottom corner
        jQuery('.nav-bar ul').append(`<li class="hidden-xs" id="nav-bar__email"><a href="#"><span id="user-email" class="hidden-xs navbar-text">${account.email}</span></a></li>`);

        // get all the user's wallets

        let {wallets} = await getWallets(account._id)

        // make them the options of the dropdowns
        let html = wallets.map(generateOptionsHTML).join('')
        jQuery('.wallet-dropdown-select').html(html);
      }()

      // get all the wallets that are attached to the logged in developer
      async function getWallets(myDeveloperId) {
        let res = await fetch(`/wallets/developer/${myDeveloperId}`, {
          headers: {
            'x-auth-key': document.cookie
          }
        })

        return res.json()
      }

      // send message js
      jQuery('#sign-message__form').on('submit', function(e) {
        e.preventDefault();

        // get message to sign
        let messageToSign = jQuery('[name=message]').val();

        // get wallet address
        let walletAddress = jQuery('#sign-message__form select').val();

        // go sign it
        jQuery.post({
          url: `/wallets/address/${walletAddress}/sign_message` ,
          type: 'post',
          data: {
            message: messageToSign
          },
          headers: {
            'x-auth-key': document.cookie
          }
        }, function(data, status) {
          // clear form field
          jQuery('[name=message]').val("");
          let signedMessage = JSON.parse(JSON.stringify(data)).message;
          console.log(signedMessage);

          //print it to screen
          jQuery('#sign-message__form').append(`<div class="message-box success"><i class="material-icons">favorite_border</i><p>Success!</p><br><br><p>Message: <span class="preformatted">${signedMessage.message}</span></p><br><br><p>Message Hash: <span class="preformatted">${signedMessage.messageHash}</span></p><br><br><p>Signature: <span class="preformatted">${signedMessage.signature}</span></p><br><br><p>Wallet Used: <span class="preformatted">${walletAddress}</span></p></div>`);
        }).fail(function(xhr, status, error) {
          console.log(error);
          jQuery('[name=message]').val("");
          jQuery('#sign-message__form').append(`<div class="message-box error"><i class="material-icons">error_outline</i><p>Something went horribly, horribly wrong.</p>`);
        })
      })

      // sign transaction js
      jQuery('#sign-transaction__form').on('submit', function(e) {
        e.preventDefault();

        // get transaction to sign
        let transactionToSign = {
          to: jQuery('[name=to_addr]').val(),
          value: jQuery('[name=value]').val(),
          gas: jQuery('[name=gas]').val()
        };

        // get wallet address
        let walletAddress = jQuery('#sign-message__form select').val();

        // go sign it
        jQuery.post({
          url: `/wallets/address/${walletAddress}/sign_transaction` ,
          type: 'post',
          data: {
            "transaction": {
                "to": transactionToSign.to,
                "value": transactionToSign.value,
                "gas": transactionToSign.gas
              }
          },
          headers: {
            'x-auth-key': document.cookie
          }
        }, function(data, status) {
          // clear form field
          jQuery('[name=to_addr]').val("");
          jQuery('[name=value]').val("");
          jQuery('[name=gas]').val("");

          let signedTransaction = JSON.parse(JSON.stringify(data)).signedTransaction;
          console.log(signedTransaction);

          //print it to screen
          jQuery('#sign-transaction__form').append(`<div class="message-box success"><i class="material-icons">favorite_border</i><p>Success!</p><br><br><p>Raw Transaction: <span class="preformatted">${signedTransaction.rawTransaction}</span></p><br><br><p>Message Hash: <span class="preformatted">${signedTransaction.messageHash}</span></p><br><br><p>Wallet Used: <span class="preformatted">${walletAddress}</span></p></div>`);
        }).fail(function(xhr, status, error) {
          console.log(error);
          jQuery('[name=to_addr]').val("");
          jQuery('[name=value]').val("");
          jQuery('[name=gas]').val("");

          jQuery('#sign-message__form').append(`<div class="message-box error"><i class="material-icons">error_outline</i><p>Something went horribly, horribly wrong.</p>`);
        })
      })

      //
      //     // go sign it
      //
      //     jQuery.post({
      //       url: `/wallets/address/${currentWalletAddr}/sign_transaction` ,
      //       type: 'post',
      //       headers: {
      //         'x-auth-key': document.cookie
      //       }
      //     }, function(data, status) {
      //       // clear form field
      //
      //       // display success banner with signed message
      //       let signedTransactionObj = JSON.parse(JSON.stringify(data)).signedTransaction;
      //
      //       let signedTransactionHtml = `<div id='signing-transaction-success-message'><h4>Signed Transaction: </h4><span class="preformatted" style="background-color: white; overflow-wrap: break-word;">${signedTransactionObj.rawTransaction}</span><h4>Wallet Used To Sign Transaction: </h4><span class="preformatted" style="background-color: white; overflow-wrap: break-word;">${currentWalletAddr}</span></div>`;
      //
      //       jQuery('#signing-transaction-demo__success-message').html(signedTransactionHtml);
      //     }).fail(function(xhr, status, error) {
      //     // handle fail case
      //     console.log(error);
      //     jQuery('[name=to_addr]').val("");
      //     jQuery('[name=value]').val("");
      //     jQuery('[name=gas]').val("");
      //     jQuery('#signing-transaction-demo__form').append('<div class="error"> Something went horribly, horribly wrong.</div>');
      //   })
      // })
      // })


    </script>
  </body>
</html>
